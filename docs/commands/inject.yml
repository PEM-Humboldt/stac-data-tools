title: "Comando Inject"
description: >
  Inyecta ítems en el archivo `collection.json` a partir de archivos `.tif`.

examples:
  - name: "Inyección básica con copia de seguridad del archivo `collection.json`"
    descriptions:
      - cmd: "python src/main.py inject -f my_folder"
  - name: "Inyección sin copia de seguridad del archivo `collection.json`"
    descriptions:
      - cmd: "python src/main.py inject -f my_folder --no-backup"
      - text: "Usando nombres completos de parámetros:"
        cmd: "python src/main.py inject --folder my_folder --no-backup"
notes:
  - title: "Descripción del proceso"
    description: |
      El comando inject:  
      1. Lee el archivo `collection.json` desde `input/<folder>`  
      2. Reemplaza la sección "items" usando los archivos `.tif` en esa carpeta  
      3. Conserva toda la información restante de la colección  
      4. Genera un nuevo `collection.json` actualizado
  - title: "Requisitos de los archivos"
    description: |
      - La carpeta de la colección debe estar en el directorio `input`
      - Los archivos `.tif` deben incluir en su nombre:
          - Un año (por ejemplo, `2005`)
          - O un período (por ejemplo, `2000_2005` o `2000-2005`)
      - La carpeta debe contener un archivo `collection.json` válido
  - title: "Comportamiento del comando"
    description: |
      - Por defecto, crea una copia de seguridad del archivo original `collection.json`
      - Usa `--no-backup` para omitir la creación de la copia de seguridad del archivo `collection.json`
      - Falla si se encuentran años o períodos duplicados en los nombres de archivo
      - El archivo `collection.json` resultante está listo para la creación o actualización de colecciones
  - title: "Buenas prácticas"
    description: |
      - Revisa siempre el archivo `collection.json` generado después de la inyección
      - Conserva copias de seguridad de las colecciones importantes